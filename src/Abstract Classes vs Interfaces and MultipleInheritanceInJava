Java Tutorial: Abstract Classes Vs Interfaces:

                 Abstract class	                                                                     Interface
1. It can contain abstract and non-abstract method	                                    1.  It can only contain abstract methods. We do not need to use the "abstract"
                                                                                            keyword in interface methods because the interface is implicitly abstract.

2.abstract keyword is used to declare an abstract class.	                            2.interface keyword is used to declare an interface.

3.  A sub-class extends the abstract class by using the "extends" keyword.	            3.The "implements" keyword is used to implement an interface.

4. A abstract class in Java can have class members like private, protected, etc. 	    4. Members of a Java interface are public by default.

5. Abstract class doesn't support multiple inheritance.	                                5. Multiple inheritance is achieved in Java by using the interface.


Why multiple inheritance is not supported in java?

Is multiple inheritance allowed in Java?

1.Multiple inheritance faces problems when there exists a method with the same signature in both the superclasses.
2.Due to such a problem, java does not support multiple inheritance directly, but the similar concept can be achieved using interfaces.
3.A class can implement multiple interfaces and extend a class at the same time.

Some Important points :

1.Interfaces in java are a bit like the class but with a significantly different.
2.An Interface can only have method signatures field and a default method.
3.The class implementing an interface needs to declare the methods ( not field )
4.You can create a reference of an interface but not the object
5.Interface methods are public by default